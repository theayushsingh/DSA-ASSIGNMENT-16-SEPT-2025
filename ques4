//Given a 2D square matrix mat[][] of size n x n, rotate it by 180 degrees without using extra space. Note: You must rotate the matrix in place and modify the input matrix directly.

import java.util.Arrays;

public class RotateMatrix180 {
    public static void rotate180(int[][] mat) {
        int n = mat.length;

        // Swap elements with their diagonally opposite counterparts
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                // Only swap once (avoid double swapping)
                if (i < n - 1 - i || (i == n - 1 - i && j < n - 1 - j)) {
                    int temp = mat[i][j];
                    mat[i][j] = mat[n - 1 - i][n - 1 - j];
                    mat[n - 1 - i][n - 1 - j] = temp;
                }
            }
        }
    }

    public static void main(String[] args) {
        int[][] mat = {
            {1, 2},
            {3, 4}
        };

        rotate180(mat);

        // Print rotated matrix
        for (int[] row : mat) {
            System.out.println(Arrays.toString(row));
        }
    }
}
